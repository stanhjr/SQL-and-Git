
CREATE DATABASE library;

\c library

CREATE TABLE cathegory(id BIGSERIAL PRIMARY KEY, cathegory VARCHAR (32) NOT NULL);
INSERT INTO cathegory (cathegory) VALUES ('Romance novel'), ('Adventure'), ('Horror'), ('Classic'), ('Mystery'), ('Fairy tale');

CREATE TABLE author (id BIGSERIAL PRIMARY KEY, author VARCHAR (32) NOT NULL);
INSERT INTO author (author) VALUES ('F. Baum'), ('I.Ilif'), ('E.Petrov'), ('Gete'), ('M.Twen'), ('Duma'), ('Kipling'), ('M.Mitchell'), ('M. Shelli');

CREATE TABLE tag (id BIGSERIAL PRIMARY KEY, tag VARCHAR (32) NOT NULL);
INSERT INTO tag (tag) VALUES ('for children'), ('for the whole family'), ('for a laugh'), ('for smart'), ('for woman'), ('for men');

CREATE TABLE book (id BIGSERIAL PRIMARY KEY, title VARCHAR (32) NOT NULL, date DATE NOT NULL, number_of_pages INTEGER NOT NULL);
INSERT INTO book (title, date, number_of_pages) VALUES ('Wizard of the oz', '1902-05-01', 205), ('Jugnle book', '1935-09-05', 500), ('Gone with the wind', '1945-03-02', 1200), ('Frankenstein', '1845-02-25', 135), ('Tom Sawyer', '1845-02-25', 120), ('Why not', '1897-05-02', 320), ('Three Musketeers', '1999-05-24', 560), ('Faust', '1858-10-02', 652), ('12 chairs', '1923-04-01', 651), ('Golden calf', '1932-04-01', 756);

CREATE TABLE author_book (pk BIGSERIAL PRIMARY KEY, book INTEGER NOT NULL REFERENCES book(id), author INTEGER NOT NULL REFERENCES author(id));
INSERT INTO author_book (book, author) VALUES (1,1), (2,7),(3,8),(4,9),(5,5),(6,6),(7,6),(8,4),(9,2),(10,2), (10, 3), (9,3);

CREATE TABLE tag_book(pk BIGSERIAL PRIMARY KEY, book INTEGER NOT NULL REFERENCES book(id) , tag INTEGER REFERENCES tag(id));
INSERT INTO tag_book (book, tag) VALUES (1,1), (2,1), (3,4), (4,3), (5,1), (5,6), (6,1),(6,2), (8,4), (9,2),(9,3),(9,6), (10,2),(10,3),(10,6);

CREATE TABLE library (id BIGSERIAL PRIMARY KEY, book INTEGER NOT NULL REFERENCES book(id), author INTEGER NOT NULL REFERENCES author_book(pk), cathegory INTEGER NOT NULL REFERENCES cathegory(id), tag INTEGER REFERENCES tag_book(pk));
INSERT INTO library (book, author, cathegory, tag) VALUES (1, 1, 6, 1), (2, 2, 6,2), (3, 3, 1,3), (4, 4, 3,4), (5, 5, 2, 5), (6, 6, 5, 6), (7, 7, 2, 8), (8, 8, 4, 8), (9, 9, 2, 9), (10, 10, 2, 10);


-- General table view (library)

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages;

-- Sort alphabetically by author name (descending)

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, author.author
ORDER BY author.author;

-- Sorting book titles in alphabetical order limited to 5 rows (ascending)

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages
ORDER BY book.title DESC
LIMIT 5;

-- Getting a list of books where the number of pages is more than 600 but less than 1200

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
WHERE book.number_of_pages BETWEEN 600 AND 1200
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages;

-- Getting a list of books, the date of writing which begins after 01.01.1991 and the number of pages of which is more than 500

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
WHERE book.date > '1900-01-01' AND book.number_of_pages > 500
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages;

-- Selection of books with category 'adventure'

SELECT library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages, string_agg(distinct author.author, ', '),  string_agg(distinct tag.tag, ', ') FROM library
LEFT JOIN tag_book ON tag_book.book = library.book
LEFT JOIN tag ON tag.id = tag_book.tag
LEFT JOIN book ON book.id = library.id
LEFT JOIN author_book ON author_book.book = library.book
LEFT JOIN author ON author.id = author_book.author
LEFT JOIN cathegory ON cathegory.id = library.cathegory
WHERE cathegory.cathegory = 'Adventure'
GROUP BY library.id, book.title, book.date, cathegory.cathegory, book.number_of_pages;





